<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.1011.0410                               -->
<workbook original-version='18.1' source-build='2023.1.7 (20231.23.1011.0410)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <ParameterAction />
    <_.fcp.ParameterActionClearSelection.true...ParameterActionClearSelection />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Profit' caption='_Measure Names' datatype='string' name='[Driver Pay Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Profit&quot;'>
        <calculation class='tableau' formula='&quot;Profit&quot;' />
      </column>
    </datasource>
    <datasource caption='fct_trips' inline='true' name='federated.0l86sq41ijnic012y15bg0cr89m9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='fct_trips' name='textscan.1t1q27f1jbtpd41gjgzd31ns7bs0'>
            <connection class='textscan' directory='/Users/viviank/Desktop/NYC_ride_project/datasets/schema' filename='fct_trips.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[fct_trips.csv].[PULOCATIONID]' />
              <expression op='[dim_pickup_loc.csv].[PULOCATIONID]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[fct_trips.csv].[DOLOCATIONID]' />
                <expression op='[dim_dropoff_loc.csv].[DOLOCATIONID]' />
              </expression>
            </clause>
            <relation connection='textscan.1t1q27f1jbtpd41gjgzd31ns7bs0' name='fct_trips.csv' table='[fct_trips#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='datetime' name='REQUEST_DATETIME' ordinal='0' />
                <column datatype='integer' name='PULOCATIONID' ordinal='1' />
                <column datatype='integer' name='DOLOCATIONID' ordinal='2' />
                <column datatype='real' name='TRIP_MILES' ordinal='3' />
                <column datatype='integer' name='TRIP_TIME' ordinal='4' />
                <column datatype='real' name='BASE_PASSENGER_FARE' ordinal='5' />
                <column datatype='real' name='TOLLS' ordinal='6' />
                <column datatype='real' name='SALES_TAX' ordinal='7' />
                <column datatype='real' name='SURCHARGES' ordinal='8' />
                <column datatype='real' name='TIPS' ordinal='9' />
                <column datatype='real' name='DRIVER_PAY' ordinal='10' />
                <column datatype='real' name='WEEKLY_GAS_PRICE' ordinal='11' />
              </columns>
            </relation>
            <relation connection='textscan.1t1q27f1jbtpd41gjgzd31ns7bs0' name='dim_dropoff_loc.csv' table='[dim_dropoff_loc#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='DOLOCATIONID' ordinal='0' />
                <column datatype='string' name='ZONE_BOROUGH' ordinal='1' />
                <column datatype='real' name='LATITUDE' ordinal='2' />
                <column datatype='real' name='LONGITUDE' ordinal='3' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1t1q27f1jbtpd41gjgzd31ns7bs0' name='dim_pickup_loc.csv' table='[dim_pickup_loc#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='PULOCATIONID' ordinal='0' />
              <column datatype='string' name='ZONE_BOROUGH' ordinal='1' />
              <column datatype='real' name='LATITUDE' ordinal='2' />
              <column datatype='real' name='LONGITUDE' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[fct_trips.csv].[PULOCATIONID]' />
              <expression op='[dim_pickup_loc.csv].[PULOCATIONID]' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[fct_trips.csv].[DOLOCATIONID]' />
                <expression op='[dim_dropoff_loc.csv].[DOLOCATIONID]' />
              </expression>
            </clause>
            <relation connection='textscan.1t1q27f1jbtpd41gjgzd31ns7bs0' name='fct_trips.csv' table='[fct_trips#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='datetime' name='REQUEST_DATETIME' ordinal='0' />
                <column datatype='integer' name='PULOCATIONID' ordinal='1' />
                <column datatype='integer' name='DOLOCATIONID' ordinal='2' />
                <column datatype='real' name='TRIP_MILES' ordinal='3' />
                <column datatype='integer' name='TRIP_TIME' ordinal='4' />
                <column datatype='real' name='BASE_PASSENGER_FARE' ordinal='5' />
                <column datatype='real' name='TOLLS' ordinal='6' />
                <column datatype='real' name='SALES_TAX' ordinal='7' />
                <column datatype='real' name='SURCHARGES' ordinal='8' />
                <column datatype='real' name='TIPS' ordinal='9' />
                <column datatype='real' name='DRIVER_PAY' ordinal='10' />
                <column datatype='real' name='WEEKLY_GAS_PRICE' ordinal='11' />
              </columns>
            </relation>
            <relation connection='textscan.1t1q27f1jbtpd41gjgzd31ns7bs0' name='dim_dropoff_loc.csv' table='[dim_dropoff_loc#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='integer' name='DOLOCATIONID' ordinal='0' />
                <column datatype='string' name='ZONE_BOROUGH' ordinal='1' />
                <column datatype='real' name='LATITUDE' ordinal='2' />
                <column datatype='real' name='LONGITUDE' ordinal='3' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1t1q27f1jbtpd41gjgzd31ns7bs0' name='dim_pickup_loc.csv' table='[dim_pickup_loc#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='PULOCATIONID' ordinal='0' />
              <column datatype='string' name='ZONE_BOROUGH' ordinal='1' />
              <column datatype='real' name='LATITUDE' ordinal='2' />
              <column datatype='real' name='LONGITUDE' ordinal='3' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[BASE_PASSENGER_FARE]' value='[fct_trips.csv].[BASE_PASSENGER_FARE]' />
          <map key='[DOLOCATIONID (dim_dropoff_loc.csv)]' value='[dim_dropoff_loc.csv].[DOLOCATIONID]' />
          <map key='[DOLOCATIONID]' value='[fct_trips.csv].[DOLOCATIONID]' />
          <map key='[DRIVER_PAY]' value='[fct_trips.csv].[DRIVER_PAY]' />
          <map key='[LATITUDE (dim_pickup_loc.csv)]' value='[dim_pickup_loc.csv].[LATITUDE]' />
          <map key='[LATITUDE]' value='[dim_dropoff_loc.csv].[LATITUDE]' />
          <map key='[LONGITUDE (dim_pickup_loc.csv)]' value='[dim_pickup_loc.csv].[LONGITUDE]' />
          <map key='[LONGITUDE]' value='[dim_dropoff_loc.csv].[LONGITUDE]' />
          <map key='[PULOCATIONID (dim_pickup_loc.csv)]' value='[dim_pickup_loc.csv].[PULOCATIONID]' />
          <map key='[PULOCATIONID]' value='[fct_trips.csv].[PULOCATIONID]' />
          <map key='[REQUEST_DATETIME]' value='[fct_trips.csv].[REQUEST_DATETIME]' />
          <map key='[SALES_TAX]' value='[fct_trips.csv].[SALES_TAX]' />
          <map key='[SURCHARGES]' value='[fct_trips.csv].[SURCHARGES]' />
          <map key='[TIPS]' value='[fct_trips.csv].[TIPS]' />
          <map key='[TOLLS]' value='[fct_trips.csv].[TOLLS]' />
          <map key='[TRIP_MILES]' value='[fct_trips.csv].[TRIP_MILES]' />
          <map key='[TRIP_TIME]' value='[fct_trips.csv].[TRIP_TIME]' />
          <map key='[WEEKLY_GAS_PRICE]' value='[fct_trips.csv].[WEEKLY_GAS_PRICE]' />
          <map key='[ZONE_BOROUGH (dim_pickup_loc.csv)]' value='[dim_pickup_loc.csv].[ZONE_BOROUGH]' />
          <map key='[ZONE_BOROUGH]' value='[dim_dropoff_loc.csv].[ZONE_BOROUGH]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[dim_dropoff_loc.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[dim_pickup_loc.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>REQUEST_DATETIME</remote-name>
            <remote-type>135</remote-type>
            <local-name>[REQUEST_DATETIME]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>REQUEST_DATETIME</remote-alias>
            <ordinal>0</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PULOCATIONID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PULOCATIONID]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>PULOCATIONID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOLOCATIONID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOLOCATIONID]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>DOLOCATIONID</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRIP_MILES</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TRIP_MILES]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>TRIP_MILES</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRIP_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TRIP_TIME]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>TRIP_TIME</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BASE_PASSENGER_FARE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[BASE_PASSENGER_FARE]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>BASE_PASSENGER_FARE</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOLLS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TOLLS]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>TOLLS</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SALES_TAX</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SALES_TAX]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>SALES_TAX</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SURCHARGES</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SURCHARGES]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>SURCHARGES</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIPS</remote-name>
            <remote-type>5</remote-type>
            <local-name>[TIPS]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>TIPS</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRIVER_PAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DRIVER_PAY]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>DRIVER_PAY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WEEKLY_GAS_PRICE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WEEKLY_GAS_PRICE]</local-name>
            <parent-name>[fct_trips.csv]</parent-name>
            <remote-alias>WEEKLY_GAS_PRICE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DOLOCATIONID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DOLOCATIONID (dim_dropoff_loc.csv)]</local-name>
            <parent-name>[dim_dropoff_loc.csv]</parent-name>
            <remote-alias>DOLOCATIONID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZONE_BOROUGH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZONE_BOROUGH]</local-name>
            <parent-name>[dim_dropoff_loc.csv]</parent-name>
            <remote-alias>ZONE_BOROUGH</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[dim_dropoff_loc.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[dim_dropoff_loc.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PULOCATIONID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PULOCATIONID (dim_pickup_loc.csv)]</local-name>
            <parent-name>[dim_pickup_loc.csv]</parent-name>
            <remote-alias>PULOCATIONID</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZONE_BOROUGH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ZONE_BOROUGH (dim_pickup_loc.csv)]</local-name>
            <parent-name>[dim_pickup_loc.csv]</parent-name>
            <remote-alias>ZONE_BOROUGH</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE (dim_pickup_loc.csv)]</local-name>
            <parent-name>[dim_pickup_loc.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE (dim_pickup_loc.csv)]</local-name>
            <parent-name>[dim_pickup_loc.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[__tableau_internal_object_id__].[cnt:fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73:qk]&quot;' value='TOTAL TRIPS' />
          <alias key='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906514882560:qk]&quot;' value='AVG REVENUE' />
          <alias key='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906514980865:qk]&quot;' value='AVG PROFIT' />
          <alias key='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906515095554:qk]&quot;' value='AVG DRIVER EARNING' />
          <alias key='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906514882560:qk]&quot;' value='TOTAL REVENUE' />
          <alias key='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906514980865:qk]&quot;' value='TOTAL PROFIT' />
          <alias key='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Profit (copy)_2163838906522034183:qk]&quot;' value='Profit' />
          <alias key='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Revenue (copy)_2163838906522046472:qk]&quot;' value='Revenue' />
          <alias key='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906515464196:qk]&quot;' value='GROSS PROFIT MARGIN' />
          <alias key='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]&quot;' value='Gross Profit Margin' />
        </aliases>
      </column>
      <column caption='Base Passenger Fare' datatype='real' name='[BASE_PASSENGER_FARE]' role='measure' type='quantitative' />
      <column caption='Revenue' datatype='real' default-format='C1033%' name='[Calculation_2163838906514882560]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
      </column>
      <column caption='Profit' datatype='real' default-format='C1033%' name='[Calculation_2163838906514980865]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
      </column>
      <column caption='Driver Earning' datatype='real' default-format='C1033%' name='[Calculation_2163838906515095554]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[DRIVER_PAY]+[TIPS]' />
      </column>
      <column caption='_Measure Monthly Avg' datatype='real' name='[Calculation_2163838906526666765]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Driver Pay Parameter]=&quot;Driver Earning&quot; THEN { FIXED DATETRUNC(&apos;month&apos;,[REQUEST_DATETIME]) : AVG([Calculation_2163838906515095554])}&#10;ELSEIF [Parameters].[Driver Pay Parameter]=&quot;Profit&quot; THEN { FIXED DATETRUNC(&apos;month&apos;,[REQUEST_DATETIME]) : AVG([Calculation_2163838906514980865])}&#10;ELSEIF [Parameters].[Driver Pay Parameter]=&quot;Revenue&quot; THEN { FIXED DATETRUNC(&apos;month&apos;,[REQUEST_DATETIME]) : AVG([Calculation_2163838906514882560])}&#10;END' />
      </column>
      <column caption='dropoff loc' datatype='spatial' name='[Calculation_2467128194249256960]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKEPOINT([LONGITUDE],[LATITUDE])' />
      </column>
      <column caption='pickup loc' datatype='spatial' name='[Calculation_2467128194249338881]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKEPOINT([LONGITUDE (dim_pickup_loc.csv)],[LATITUDE (dim_pickup_loc.csv)])' />
      </column>
      <column caption='Gross Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_2467128194266914821]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit (copy)_2163838906522034183]) / SUM([Revenue (copy)_2163838906522046472])' />
      </column>
      <column caption='description' datatype='string' name='[Calculation_2467128194511507465]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Metric descriptions&quot;' />
      </column>
      <column caption='DOLOCATIONID (dim dropoff loc.csv)' datatype='integer' name='[DOLOCATIONID (dim_dropoff_loc.csv)]' role='measure' type='quantitative' />
      <column caption='Dolocationid' datatype='integer' name='[DOLOCATIONID]' role='measure' type='quantitative' />
      <column caption='Driver Pay' datatype='real' name='[DRIVER_PAY]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='LONGITUDE (dim pickup loc.csv)' datatype='real' name='[LATITUDE (dim_pickup_loc.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='LATITUDE (dim pickup loc.csv)' datatype='real' name='[LONGITUDE (dim_pickup_loc.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='PULOCATIONID (dim pickup loc.csv)' datatype='integer' name='[PULOCATIONID (dim_pickup_loc.csv)]' role='measure' type='quantitative' />
      <column caption='Pulocationid' datatype='integer' name='[PULOCATIONID]' role='measure' type='quantitative' />
      <column caption='Profit (copy)' datatype='real' default-format='C1033%' name='[Profit (copy)_2163838906522034183]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
      </column>
      <column caption='Request Datetime' datatype='datetime' name='[REQUEST_DATETIME]' role='dimension' type='ordinal' />
      <column caption='Revenue (copy)' datatype='real' default-format='C1033%' name='[Revenue (copy)_2163838906522046472]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
      </column>
      <column caption='Sales Tax' datatype='real' name='[SALES_TAX]' role='measure' type='quantitative' />
      <column caption='Surcharges' datatype='real' name='[SURCHARGES]' role='measure' type='quantitative' />
      <column caption='Tips' datatype='real' name='[TIPS]' role='measure' type='quantitative' />
      <column caption='Tolls' datatype='real' name='[TOLLS]' role='measure' type='quantitative' />
      <column caption='Trip Miles' datatype='real' name='[TRIP_MILES]' role='measure' type='quantitative' />
      <column caption='Trip Time' datatype='integer' name='[TRIP_TIME]' role='measure' type='quantitative' />
      <column caption='Weekly Gas Price' datatype='real' name='[WEEKLY_GAS_PRICE]' role='measure' type='quantitative' />
      <column caption='ZONE BOROUGH (dim pickup loc.csv)' datatype='string' name='[ZONE_BOROUGH (dim_pickup_loc.csv)]' role='dimension' type='nominal' />
      <column caption='Zone Borough' datatype='string' name='[ZONE_BOROUGH]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='fct_trips.csv' datatype='table' name='[__tableau_internal_object_id__].[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2163838906514882560]' derivation='Avg' name='[avg:Calculation_2163838906514882560:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2163838906514980865]' derivation='Avg' name='[avg:Calculation_2163838906514980865:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2163838906515095554]' derivation='Avg' name='[avg:Calculation_2163838906515095554:qk]' pivot='key' type='quantitative' />
      <column-instance column='[LONGITUDE (dim_pickup_loc.csv)]' derivation='Avg' name='[avg:LONGITUDE (dim_pickup_loc.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[LONGITUDE]' derivation='Avg' name='[avg:LONGITUDE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[REQUEST_DATETIME]' derivation='MY' name='[my:REQUEST_DATETIME:ok]' pivot='key' type='ordinal' />
      <column-instance column='[LONGITUDE (dim_pickup_loc.csv)]' derivation='None' name='[none:LONGITUDE (dim_pickup_loc.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[LONGITUDE]' derivation='None' name='[none:LONGITUDE:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ZONE_BOROUGH (dim_pickup_loc.csv)]' derivation='None' name='[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' pivot='key' type='nominal' />
      <column-instance column='[ZONE_BOROUGH]' derivation='None' name='[none:ZONE_BOROUGH:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2163838906514882560]' derivation='Sum' name='[sum:Calculation_2163838906514882560:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2163838906514980865]' derivation='Sum' name='[sum:Calculation_2163838906514980865:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2163838906515095554]' derivation='Sum' name='[sum:Calculation_2163838906515095554:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit (copy)_2163838906522034183]' derivation='Sum' name='[sum:Profit (copy)_2163838906522034183:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Revenue (copy)_2163838906522046472]' derivation='Sum' name='[sum:Revenue (copy)_2163838906522046472:qk]' pivot='key' type='quantitative' />
      <group caption='Action (ZONE BOROUGH (dim pickup loc.csv))' hidden='true' name='[Action (ZONE BOROUGH (dim pickup loc.csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ZONE_BOROUGH (dim_pickup_loc.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (ZONE BOROUGH (dim pickup loc.csv),Zone Borough)' hidden='true' name='[Action (ZONE BOROUGH (dim pickup loc.csv),Zone Borough)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ZONE_BOROUGH (dim_pickup_loc.csv)]' />
          <groupfilter function='level-members' level='[ZONE_BOROUGH]' />
        </groupfilter>
      </group>
      <group caption='Action (Zone Borough)' hidden='true' name='[Action (Zone Borough)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[ZONE_BOROUGH]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/viviank/Documents/My Tableau Repository/Datasources/fct_trips.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[BASE_PASSENGER_FARE]' value='[Extract].[BASE_PASSENGER_FARE]' />
            <map key='[DOLOCATIONID (dim_dropoff_loc.csv)]' value='[Extract].[DOLOCATIONID]' />
            <map key='[DOLOCATIONID]' value='[Extract].[DOLOCATIONID1]' />
            <map key='[DRIVER_PAY]' value='[Extract].[DRIVER_PAY]' />
            <map key='[LATITUDE (dim_pickup_loc.csv)]' value='[Extract].[LATITUDE]' />
            <map key='[LATITUDE]' value='[Extract].[LATITUDE1]' />
            <map key='[LONGITUDE (dim_pickup_loc.csv)]' value='[Extract].[LONGITUDE]' />
            <map key='[LONGITUDE]' value='[Extract].[LONGITUDE1]' />
            <map key='[PULOCATIONID (dim_pickup_loc.csv)]' value='[Extract].[PULOCATIONID]' />
            <map key='[PULOCATIONID]' value='[Extract].[PULOCATIONID1]' />
            <map key='[REQUEST_DATETIME]' value='[Extract].[REQUEST_DATETIME]' />
            <map key='[SALES_TAX]' value='[Extract].[SALES_TAX]' />
            <map key='[SURCHARGES]' value='[Extract].[SURCHARGES]' />
            <map key='[TIPS]' value='[Extract].[TIPS]' />
            <map key='[TOLLS]' value='[Extract].[TOLLS]' />
            <map key='[TRIP_MILES]' value='[Extract].[TRIP_MILES]' />
            <map key='[TRIP_TIME]' value='[Extract].[TRIP_TIME]' />
            <map key='[WEEKLY_GAS_PRICE]' value='[Extract].[WEEKLY_GAS_PRICE]' />
            <map key='[ZONE_BOROUGH (dim_pickup_loc.csv)]' value='[Extract].[ZONE_BOROUGH]' />
            <map key='[ZONE_BOROUGH]' value='[Extract].[ZONE_BOROUGH1]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>REQUEST_DATETIME</remote-name>
              <remote-type>135</remote-type>
              <local-name>[REQUEST_DATETIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>REQUEST_DATETIME</remote-alias>
              <ordinal>0</ordinal>
              <family>fct_trips.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>35116732</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PULOCATIONID1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PULOCATIONID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PULOCATIONID1</remote-alias>
              <ordinal>1</ordinal>
              <family>fct_trips.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>258</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DOLOCATIONID1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DOLOCATIONID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DOLOCATIONID1</remote-alias>
              <ordinal>2</ordinal>
              <family>fct_trips.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRIP_MILES</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TRIP_MILES]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRIP_MILES</remote-alias>
              <ordinal>3</ordinal>
              <family>fct_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12503</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRIP_TIME</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TRIP_TIME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TRIP_TIME</remote-alias>
              <ordinal>4</ordinal>
              <family>fct_trips.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14489</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>BASE_PASSENGER_FARE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[BASE_PASSENGER_FARE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>BASE_PASSENGER_FARE</remote-alias>
              <ordinal>5</ordinal>
              <family>fct_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49514</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TOLLS</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TOLLS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TOLLS</remote-alias>
              <ordinal>6</ordinal>
              <family>fct_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>450</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SALES_TAX</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SALES_TAX]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SALES_TAX</remote-alias>
              <ordinal>7</ordinal>
              <family>fct_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2477</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SURCHARGES</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SURCHARGES]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SURCHARGES</remote-alias>
              <ordinal>8</ordinal>
              <family>fct_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1467</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TIPS</remote-name>
              <remote-type>5</remote-type>
              <local-name>[TIPS]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TIPS</remote-alias>
              <ordinal>9</ordinal>
              <family>fct_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5505</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DRIVER_PAY</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DRIVER_PAY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DRIVER_PAY</remote-alias>
              <ordinal>10</ordinal>
              <family>fct_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>33265</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WEEKLY_GAS_PRICE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[WEEKLY_GAS_PRICE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WEEKLY_GAS_PRICE</remote-alias>
              <ordinal>11</ordinal>
              <family>fct_trips.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DOLOCATIONID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[DOLOCATIONID (dim_dropoff_loc.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DOLOCATIONID</remote-alias>
              <ordinal>12</ordinal>
              <family>dim_dropoff_loc.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZONE_BOROUGH1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ZONE_BOROUGH]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZONE_BOROUGH1</remote-alias>
              <ordinal>13</ordinal>
              <family>dim_dropoff_loc.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>267</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATITUDE1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LATITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATITUDE1</remote-alias>
              <ordinal>14</ordinal>
              <family>dim_dropoff_loc.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>181</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LONGITUDE1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LONGITUDE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LONGITUDE1</remote-alias>
              <ordinal>15</ordinal>
              <family>dim_dropoff_loc.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>178</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PULOCATIONID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[PULOCATIONID (dim_pickup_loc.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PULOCATIONID</remote-alias>
              <ordinal>16</ordinal>
              <family>dim_pickup_loc.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>258</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZONE_BOROUGH</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ZONE_BOROUGH (dim_pickup_loc.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZONE_BOROUGH</remote-alias>
              <ordinal>17</ordinal>
              <family>dim_pickup_loc.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>257</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LATITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LATITUDE (dim_pickup_loc.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LATITUDE</remote-alias>
              <ordinal>18</ordinal>
              <family>dim_pickup_loc.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>174</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>LONGITUDE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[LONGITUDE (dim_pickup_loc.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>LONGITUDE</remote-alias>
              <ordinal>19</ordinal>
              <family>dim_pickup_loc.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>178</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Allerton/Pelham Gardens, Bronx&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Murray Hill, Manhattan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Baisley Park, Queens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bronx Park, Bronx&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Co-Op City, Bronx&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;East Flatbush/Remsen Village, Brooklyn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Flushing Meadows-Corona Park, Queens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenwich Village South, Manhattan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kensington, Brooklyn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marble Hill, Manhattan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Newark Airport, EWR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Queensboro Hill, Queens&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Soundview/Bruckner, Bronx&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Two Bridges/Seward Park, Manhattan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Whitestone, Queens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arden Heights, Staten Island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bloomfield/Emerson Hill, Staten Island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central Park, Manhattan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Douglaston, Queens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eltingville/Annadale/Prince&apos;s Bay, Staten Island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gowanus, Brooklyn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hunts Point, Bronx&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Long Island City/Hunters Point, Queens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Midwood, Brooklyn&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pelham Bay, Bronx&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rossville/Woodrow, Staten Island&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Stuy Town/Peter Cooper Village, Manhattan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Heights South, Manhattan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arrochar/Fort Wadsworth, Staten Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Breezy Point/Fort Tilden/Riis Beach, Queens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Claremont/Bathgate, Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;East Chelsea, Manhattan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Financial District South, Manhattan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Great Kills, Staten Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica Bay, Queens&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madison, Brooklyn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mount Hope, Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Prospect Heights, Brooklyn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Schuylerville/Edgewater Park, Bronx&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sunset Park West, Brooklyn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Farms/Bronx River, Bronx&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bay Ridge, Brooklyn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brownsville, Brooklyn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Coney Island, Brooklyn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;East New York, Brooklyn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Forest Park/Highland Park, Queens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Heartland Village/Todt Hill, Staten Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kips Bay, Manhattan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maspeth, Queens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oakwood, Staten Island&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rego Park, Queens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Ozone Park, Queens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Upper East Side North, Manhattan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Williamsburg (South Side), Brooklyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bath Beach, Brooklyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bronxdale, Bronx&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cobble Hill, Brooklyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;East Flushing, Queens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flushing, Queens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grymes Hill/Clifton, Staten Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kew Gardens Hills, Queens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marine Park/Floyd Bennett Field, Brooklyn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Corona, Queens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Queensbridge/Ravenswood, Queens&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Soundview/Castle Hill, Bronx&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UN/Turtle Bay South, Manhattan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Willets Point, Queens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Astoria Park, Queens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Briarwood/Jamaica Hills, Queens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clinton East, Manhattan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;East Concourse/Concourse Village, Bronx&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Flatbush/Ditmas Park, Brooklyn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Green-Wood Cemetery, Brooklyn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica Estates, Queens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manhattan Beach, Brooklyn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Murray Hill-Queens, Queens&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prospect Park, Brooklyn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seaport, Manhattan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sutton Place/Turtle Bay North, Manhattan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;West Village, Manhattan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belmont, Bronx&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central Harlem North, Manhattan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crown Heights South, Brooklyn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elmhurst, Queens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Glendale, Queens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Howard Beach, Queens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lincoln Square West, Manhattan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Midtown North, Manhattan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Parkchester, Bronx&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roosevelt Island, Manhattan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Starrett City, Brooklyn&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Van Nest/Morris Park, Bronx&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Yorkville East, Manhattan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Allerton/Pelham Gardens, Bronx&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomingdale, Manhattan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charleston/Tottenville, Staten Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Downtown Brooklyn/MetroTech, Brooklyn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erasmus, Brooklyn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gramercy, Manhattan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Inwood Hill Park, Manhattan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Long Island City/Queens Plaza, Queens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Morningside Heights, Manhattan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pelham Parkway, Bronx&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Albans, Queens&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stuyvesant Heights, Brooklyn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Brighton, Staten Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bedford, Brooklyn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canarsie, Brooklyn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crotona Park, Bronx&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;East Williamsburg, Brooklyn&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Garment District, Manhattan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hollis, Queens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lenox Hill West, Manhattan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Midtown Center, Manhattan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ozone Park, Queens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Riverdale/North Riverdale/Fieldston, Bronx&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge, Bronx&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Van Cortlandt Park, Bronx&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Woodside, Queens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Astoria, Queens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brighton Beach, Brooklyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clinton Hill, Brooklyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East Elmhurst, Queens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Flatiron, Manhattan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenpoint, Brooklyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica, Queens&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manhattan Valley, Manhattan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Murray Hill, Manhattan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Prospect-Lefferts Gardens, Brooklyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sheepshead Bay, Brooklyn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Times Sq/Theatre District, Manhattan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Westchester Village/Unionport, Bronx&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bay Terrace/Fort Totten, Queens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bushwick North, Brooklyn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Corona, Queens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East New York/Pennsylvania Avenue, Brooklyn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Greene, Brooklyn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Highbridge Park, Manhattan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LaGuardia Airport, Queens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Meatpacking/West Village West, Manhattan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ocean Hill, Brooklyn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Richmond Hill, Queens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Williamsburg, Brooklyn&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Upper East Side South, Manhattan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Windsor Terrace, Brooklyn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bayside, Queens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bushwick South, Brooklyn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Country Club, Bronx&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;East Tremont, Bronx&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fresh Meadows, Queens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Highbridge, Bronx&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laurelton, Queens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Melrose South, Bronx&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ocean Parkway South, Brooklyn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ridgewood, Queens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Springfield Gardens North, Queens&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Upper West Side North, Manhattan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodhaven, Queens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellerose, Queens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carroll Gardens, Brooklyn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crown Heights North, Brooklyn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eastchester, Bronx&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Glen Oaks, Queens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Homecrest, Brooklyn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lincoln Square East, Manhattan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midtown East, Manhattan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Park Slope, Brooklyn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rockaway Park, Queens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stapleton, Staten Island&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Van Cortlandt Village, Bronx&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;World Trade Center, Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bensonhurst East, Brooklyn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bensonhurst West, Brooklyn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cypress Hills, Brooklyn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst/Maspeth, Queens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Governor&apos;s Island/Ellis Island/Liberty Island, Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hudson Sq, Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Little Italy/NoLiTa, Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Midtown South, Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pelham Bay Park, Bronx&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rosedale, Queens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steinway, Queens&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Heights North, Manhattan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yorkville West, Manhattan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Battery Park City, Manhattan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brooklyn Heights, Brooklyn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;College Point, Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Harlem North, Manhattan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fordham South, Bronx&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hamilton Heights, Manhattan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kew Gardens, Queens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marine Park/Mill Basin, Brooklyn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Norwood, Bronx&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Randalls Island, Manhattan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Beach/Dongan Hills, Staten Island&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Union Sq, Manhattan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Williamsbridge/Olinville, Bronx&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Auburndale, Queens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Broad Channel, Queens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clinton West, Manhattan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;East Flatbush/Farragut, Brooklyn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flatlands, Brooklyn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenwich Village North, Manhattan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JFK Airport, Queens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Manhattanville, Manhattan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Dorp/Midland Beach, Staten Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Queens Village, Queens&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SoHo, Manhattan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TriBeCa/Civic Center, Manhattan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Westerleigh, Staten Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boerum Hill, Brooklyn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Borough Park, Brooklyn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chinatown, Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DUMBO/Vinegar Hill, Brooklyn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Far Rockaway, Queens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gravesend, Brooklyn&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Inwood, Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Longwood, Bronx&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morrisania/Melrose, Bronx&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Penn Station/Madison Sq West, Manhattan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint George/New Brighton, Staten Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sunnyside, Queens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Chelsea/Hudson Yards, Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bedford Park, Bronx&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambria Heights, Queens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Crotona Park East, Bronx&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;East Village, Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Freshkills Park, Staten Island&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hillcrest/Pomonok, Queens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lenox Hill East, Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle Village, Queens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Old Astoria, Queens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rikers Island, Bronx&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Springfield Gardens South, Queens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Upper West Side South, Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodlawn/Wakefield, Bronx&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Battery Park, Manhattan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brooklyn Navy Yard, Brooklyn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Columbia Street, Brooklyn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Harlem South, Manhattan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Forest Hills, Queens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hammels/Arverne, Queens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kingsbridge Heights, Bronx&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mariners Harbor, Staten Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oakland Gardens, Queens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Red Hook, Brooklyn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Jamaica, Queens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;University Heights/Morris Heights, Bronx&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Williamsburg (North Side), Brooklyn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alphabet City, Manhattan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Central Harlem, Manhattan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;City Island, Bronx&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dyker Heights, Brooklyn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Financial District North, Manhattan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Great Kills Park, Staten Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jackson Heights, Queens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lower East Side, Manhattan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mott Haven/Port Morris, Bronx&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Port Richmond, Staten Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Michaels Cemetery/Woodside, Queens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sunset Park East, Brooklyn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Concourse, Bronx&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ZONE_BOROUGH:nk]' palette='gray_10_0' type='palette'>
            <map to='#55ad89'>
              <bucket>&quot;Astoria Park, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Astoria, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Auburndale, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Baisley Park, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Bay Terrace/Fort Totten, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Bayside, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Bellerose, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Breezy Point/Fort Tilden/Riis Beach, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Briarwood/Jamaica Hills, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Broad Channel, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Cambria Heights, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;College Point, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Corona, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Douglaston, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;East Elmhurst, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;East Flushing, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Elmhurst, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Elmhurst/Maspeth, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Far Rockaway, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Flushing Meadows-Corona Park, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Flushing, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Forest Hills, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Forest Park/Highland Park, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Fresh Meadows, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Glen Oaks, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Glendale, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Hammels/Arverne, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Hillcrest/Pomonok, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Hollis, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Howard Beach, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Jackson Heights, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Jamaica Bay, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Jamaica Estates, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Jamaica, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;JFK Airport, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Kew Gardens Hills, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Kew Gardens, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;LaGuardia Airport, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Laurelton, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Long Island City/Hunters Point, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Long Island City/Queens Plaza, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Maspeth, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Middle Village, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Murray Hill-Queens, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;North Corona, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Oakland Gardens, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Old Astoria, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Ozone Park, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Queens Village, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Queensboro Hill, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Queensbridge/Ravenswood, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Rego Park, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Richmond Hill, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Ridgewood, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Rockaway Park, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Rosedale, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Saint Albans, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Saint Michaels Cemetery/Woodside, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;South Jamaica, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;South Ozone Park, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Springfield Gardens North, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Springfield Gardens South, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Steinway, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Sunnyside, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Whitestone, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Willets Point, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Woodhaven, Queens&quot;</bucket>
            </map>
            <map to='#55ad89'>
              <bucket>&quot;Woodside, Queens&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;Newark Airport, EWR&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Bath Beach, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Bay Ridge, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Bedford, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Bensonhurst East, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Bensonhurst West, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Boerum Hill, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Borough Park, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Brighton Beach, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Brooklyn Heights, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Brooklyn Navy Yard, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Brownsville, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Bushwick North, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Bushwick South, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Canarsie, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Carroll Gardens, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Clinton Hill, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Cobble Hill, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Columbia Street, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Coney Island, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Crown Heights North, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Crown Heights South, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Cypress Hills, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Downtown Brooklyn/MetroTech, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;DUMBO/Vinegar Hill, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Dyker Heights, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;East Flatbush/Farragut, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;East Flatbush/Remsen Village, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;East New York, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;East New York/Pennsylvania Avenue, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;East Williamsburg, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Erasmus, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Flatbush/Ditmas Park, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Flatlands, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Fort Greene, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Gowanus, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Gravesend, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Green-Wood Cemetery, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Greenpoint, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Homecrest, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Kensington, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Madison, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Manhattan Beach, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Marine Park/Floyd Bennett Field, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Marine Park/Mill Basin, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Midwood, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Ocean Hill, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Ocean Parkway South, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Park Slope, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Prospect Heights, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Prospect Park, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Prospect-Lefferts Gardens, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Red Hook, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Sheepshead Bay, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;South Williamsburg, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Starrett City, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Stuyvesant Heights, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Sunset Park East, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Sunset Park West, Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Williamsburg (North Side), Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Williamsburg (South Side), Brooklyn&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;Windsor Terrace, Brooklyn&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Allerton/Pelham Gardens, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Bedford Park, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Belmont, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Bronx Park, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Bronxdale, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;City Island, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Claremont/Bathgate, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Co-Op City, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Country Club, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Crotona Park East, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Crotona Park, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;East Concourse/Concourse Village, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;East Tremont, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Eastchester, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Fordham South, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Highbridge, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Hunts Point, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Kingsbridge Heights, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Longwood, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Melrose South, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Morrisania/Melrose, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Mott Haven/Port Morris, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Mount Hope, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Norwood, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Parkchester, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Pelham Bay Park, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Pelham Bay, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Pelham Parkway, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Riverdale/North Riverdale/Fieldston, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Schuylerville/Edgewater Park, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Soundview/Bruckner, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Soundview/Castle Hill, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Spuyten Duyvil/Kingsbridge, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;University Heights/Morris Heights, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Van Cortlandt Park, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Van Cortlandt Village, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Van Nest/Morris Park, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;West Concourse, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;West Farms/Bronx River, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Westchester Village/Unionport, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Williamsbridge/Olinville, Bronx&quot;</bucket>
            </map>
            <map to='#c3bc3f'>
              <bucket>&quot;Woodlawn/Wakefield, Bronx&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Alphabet City, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Battery Park City, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Battery Park, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Bloomingdale, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Central Harlem North, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Central Harlem, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Central Park, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Chinatown, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Clinton East, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Clinton West, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;East Chelsea, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;East Harlem North, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;East Harlem South, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;East Village, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Financial District North, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Financial District South, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Flatiron, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Garment District, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Governor&apos;s Island/Ellis Island/Liberty Island, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Gramercy, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Greenwich Village North, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Greenwich Village South, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Hamilton Heights, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Highbridge Park, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Hudson Sq, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Inwood Hill Park, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Inwood, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Kips Bay, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Lenox Hill East, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Lenox Hill West, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Lincoln Square East, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Lincoln Square West, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Little Italy/NoLiTa, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Lower East Side, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Manhattan Valley, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Manhattanville, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Marble Hill, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Meatpacking/West Village West, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Midtown Center, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Midtown East, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Midtown North, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Midtown South, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Morningside Heights, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Murray Hill, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Penn Station/Madison Sq West, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Randalls Island, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Roosevelt Island, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Seaport, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;SoHo, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Stuy Town/Peter Cooper Village, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Sutton Place/Turtle Bay North, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Times Sq/Theatre District, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;TriBeCa/Civic Center, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Two Bridges/Seward Park, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;UN/Turtle Bay South, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Union Sq, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Upper East Side North, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Upper East Side South, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Upper West Side North, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Upper West Side South, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Washington Heights North, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Washington Heights South, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;West Chelsea/Hudson Yards, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;West Village, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;World Trade Center, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Yorkville East, Manhattan&quot;</bucket>
            </map>
            <map to='#ef6f6a'>
              <bucket>&quot;Yorkville West, Manhattan&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Arden Heights, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Arrochar/Fort Wadsworth, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Bloomfield/Emerson Hill, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Charleston/Tottenville, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Eltingville/Annadale/Prince&apos;s Bay, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Freshkills Park, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Great Kills Park, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Great Kills, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Grymes Hill/Clifton, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Heartland Village/Todt Hill, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Mariners Harbor, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;New Dorp/Midland Beach, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Oakwood, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Port Richmond, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Rossville/Woodrow, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Saint George/New Brighton, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;South Beach/Dongan Hills, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Stapleton, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;West Brighton, Staten Island&quot;</bucket>
            </map>
            <map to='#ffae34'>
              <bucket>&quot;Westerleigh, Staten Island&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906515095554:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:LONGITUDE:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[none:LONGITUDE:qk]&quot;</bucket>
            </map>
            <map to='#8cc2ca'>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Profit (copy)_2163838906522034183:qk]&quot;</bucket>
            </map>
            <map to='#a3cce9'>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906515095554:qk]&quot;</bucket>
            </map>
            <map to='#bb7693'>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Revenue (copy)_2163838906522046472:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:LONGITUDE (dim_pickup_loc.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[none:LONGITUDE (dim_pickup_loc.csv):qk]&quot;</bucket>
            </map>
            <map to='#ffbc79'>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='REQUEST_DATETIME' />
        <field-sort-custom-order field='PULOCATIONID' />
        <field-sort-custom-order field='DOLOCATIONID' />
        <field-sort-custom-order field='TRIP_MILES' />
        <field-sort-custom-order field='Calculation_2163838906514882560' />
        <field-sort-custom-order field='Calculation_2163838906526666765' />
        <field-sort-custom-order field='Revenue (copy)_2163838906522046472' />
        <field-sort-custom-order field='Calculation_2163838906515095554' />
        <field-sort-custom-order field='Calculation_2467128194291666952' />
        <field-sort-custom-order field='Calculation_2259047817576640512' />
        <field-sort-custom-order field='TRIP_TIME' />
        <field-sort-custom-order field='Calculation_2163838906514980865' />
        <field-sort-custom-order field='Profit (copy)_2163838906522034183' />
        <field-sort-custom-order field='Calculation_2467128194266914821' />
        <field-sort-custom-order field='BASE_PASSENGER_FARE' />
        <field-sort-custom-order field='Calculation_2467128194511507465' />
        <field-sort-custom-order field='TOLLS' />
        <field-sort-custom-order field='SALES_TAX' />
        <field-sort-custom-order field='SURCHARGES' />
        <field-sort-custom-order field='TIPS' />
        <field-sort-custom-order field='DRIVER_PAY' />
        <field-sort-custom-order field='WEEKLY_GAS_PRICE' />
        <field-sort-custom-order field='DOLOCATIONID (dim_dropoff_loc.csv)' />
        <field-sort-custom-order field='ZONE_BOROUGH' />
        <field-sort-custom-order field='LATITUDE' />
        <field-sort-custom-order field='LONGITUDE' />
        <field-sort-custom-order field='Calculation_2467128194249256960' />
        <field-sort-custom-order field='PULOCATIONID (dim_pickup_loc.csv)' />
        <field-sort-custom-order field='ZONE_BOROUGH (dim_pickup_loc.csv)' />
        <field-sort-custom-order field='LATITUDE (dim_pickup_loc.csv)' />
        <field-sort-custom-order field='LONGITUDE (dim_pickup_loc.csv)' />
        <field-sort-custom-order field='Calculation_2467128194249338881' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Profit' caption='_Measure Names' datatype='string' name='[Driver Pay Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
        </column>
      </datasource-dependencies>
      <filter class='quantitative' column='[DOLOCATIONID]' filter-group='2' included-values='in-range'>
        <min>1</min>
        <max>263</max>
      </filter>
      <filter class='quantitative' column='[PULOCATIONID]' filter-group='2' included-values='in-range'>
        <min>1</min>
        <max>263</max>
      </filter>
      <filter class='categorical' column='[my:REQUEST_DATETIME:ok]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[my:REQUEST_DATETIME:ok]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[my:REQUEST_DATETIME:ok]' member='202112' />
            <groupfilter from='202202' function='range' level='[my:REQUEST_DATETIME:ok]' to='202212' />
          </groupfilter>
        </groupfilter>
      </filter>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='fct_trips.csv' id='fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[fct_trips.csv].[PULOCATIONID]' />
                    <expression op='[dim_pickup_loc.csv].[PULOCATIONID]' />
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[fct_trips.csv].[DOLOCATIONID]' />
                      <expression op='[dim_dropoff_loc.csv].[DOLOCATIONID]' />
                    </expression>
                  </clause>
                  <relation connection='textscan.1t1q27f1jbtpd41gjgzd31ns7bs0' name='fct_trips.csv' table='[fct_trips#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                      <column datatype='datetime' name='REQUEST_DATETIME' ordinal='0' />
                      <column datatype='integer' name='PULOCATIONID' ordinal='1' />
                      <column datatype='integer' name='DOLOCATIONID' ordinal='2' />
                      <column datatype='real' name='TRIP_MILES' ordinal='3' />
                      <column datatype='integer' name='TRIP_TIME' ordinal='4' />
                      <column datatype='real' name='BASE_PASSENGER_FARE' ordinal='5' />
                      <column datatype='real' name='TOLLS' ordinal='6' />
                      <column datatype='real' name='SALES_TAX' ordinal='7' />
                      <column datatype='real' name='SURCHARGES' ordinal='8' />
                      <column datatype='real' name='TIPS' ordinal='9' />
                      <column datatype='real' name='DRIVER_PAY' ordinal='10' />
                      <column datatype='real' name='WEEKLY_GAS_PRICE' ordinal='11' />
                    </columns>
                  </relation>
                  <relation connection='textscan.1t1q27f1jbtpd41gjgzd31ns7bs0' name='dim_dropoff_loc.csv' table='[dim_dropoff_loc#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                      <column datatype='integer' name='DOLOCATIONID' ordinal='0' />
                      <column datatype='string' name='ZONE_BOROUGH' ordinal='1' />
                      <column datatype='real' name='LATITUDE' ordinal='2' />
                      <column datatype='real' name='LONGITUDE' ordinal='3' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='textscan.1t1q27f1jbtpd41gjgzd31ns7bs0' name='dim_pickup_loc.csv' table='[dim_pickup_loc#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='PULOCATIONID' ordinal='0' />
                    <column datatype='string' name='ZONE_BOROUGH' ordinal='1' />
                    <column datatype='real' name='LATITUDE' ordinal='2' />
                    <column datatype='real' name='LONGITUDE' ordinal='3' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action2_C56FECFA7749402FA7EB24F39ED9F31D]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='monthly sales' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='monthly sales' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action4_3901283DA3254A3DA87C56746EF5CE4F]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='daily sales' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='daily sales' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1 1' name='[Action6_B8780453AD4B4D93BB611E0282338111]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='hourly sales' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='hourly sales' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action7_CA2F68C3EFF24301BECFEC62D56400E1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='monthly sales' />
      <command command='tsc:brush'>
        <param name='exclude' value='overview - year,map,overview - trip,explanation' />
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <edit-parameter-action caption='Parameter1' name='[Action1_1991B71951394B37AFB9EEF77C0E7D4F]'>
      <activation type='on-hover' />
      <source type='sheet' worksheet='monthly sales' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='do-nothing' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
        <param name='target-parameter' value='[Parameters].[Driver Pay Parameter]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='Parameter1 1' name='[Action3_32E871A654434333822F7C4ABA1C49B6]'>
      <activation type='on-hover' />
      <source type='sheet' worksheet='daily sales' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='do-nothing' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
        <param name='target-parameter' value='[Parameters].[Driver Pay Parameter]' />
      </params>
    </edit-parameter-action>
    <edit-parameter-action caption='Parameter1 1 1' name='[Action5_C1F56619B7AC4C9DA92623FFB7EDCAF6]'>
      <activation type='on-hover' />
      <source type='sheet' worksheet='hourly sales' />
      <agg-type type='attr' />
      <_.fcp.ParameterActionClearSelection.true...clear-option type='do-nothing' value='s:LROOT:' />
      <params>
        <param name='source-field' value='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
        <param name='target-parameter' value='[Parameters].[Driver Pay Parameter]' />
      </params>
    </edit-parameter-action>
  </actions>
  <worksheets>
    <worksheet name='daily sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='fct_trips' name='federated.0l86sq41ijnic012y15bg0cr89m9' />
          </datasources>
          <datasource-dependencies datasource='federated.0l86sq41ijnic012y15bg0cr89m9'>
            <column caption='Base Passenger Fare' datatype='real' name='[BASE_PASSENGER_FARE]' role='measure' type='quantitative' />
            <column caption='Revenue' datatype='real' default-format='C1033%' name='[Calculation_2163838906514882560]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
            </column>
            <column caption='Profit' datatype='real' default-format='C1033%' name='[Calculation_2163838906514980865]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
            </column>
            <column caption='Driver Earning' datatype='real' default-format='C1033%' name='[Calculation_2163838906515095554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[DRIVER_PAY]+[TIPS]' />
            </column>
            <column caption='SUM([Profit])/SUM([Revenue])' datatype='real' name='[Calculation_2163838906522382346]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='SUM([Calculation_2163838906514980865])/SUM([Calculation_2163838906514882560])' />
            </column>
            <column caption='Driver Pay' datatype='real' name='[DRIVER_PAY]' role='measure' type='quantitative' />
            <column caption='Profit (copy)' datatype='real' default-format='C1033%' name='[Profit (copy)_2163838906522034183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
            </column>
            <column caption='Request Datetime' datatype='datetime' name='[REQUEST_DATETIME]' role='dimension' type='ordinal' />
            <column caption='Revenue (copy)' datatype='real' default-format='C1033%' name='[Revenue (copy)_2163838906522046472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
            </column>
            <column caption='Sales Tax' datatype='real' name='[SALES_TAX]' role='measure' type='quantitative' />
            <column caption='Surcharges' datatype='real' name='[SURCHARGES]' role='measure' type='quantitative' />
            <column caption='Tips' datatype='real' name='[TIPS]' role='measure' type='quantitative' />
            <column caption='Tolls' datatype='real' name='[TOLLS]' role='measure' type='quantitative' />
            <column-instance column='[REQUEST_DATETIME]' derivation='MY' name='[my:REQUEST_DATETIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2163838906515095554]' derivation='Sum' name='[sum:Calculation_2163838906515095554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit (copy)_2163838906522034183]' derivation='Sum' name='[sum:Profit (copy)_2163838906522034183:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue (copy)_2163838906522046472]' derivation='Sum' name='[sum:Revenue (copy)_2163838906522046472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REQUEST_DATETIME]' derivation='Day-Trunc' name='[tdy:REQUEST_DATETIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2163838906522382346]' derivation='User' name='[usr:Calculation_2163838906522382346:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906515095554:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Profit (copy)_2163838906522034183:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Revenue (copy)_2163838906522046472:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l86sq41ijnic012y15bg0cr89m9].[my:REQUEST_DATETIME:ok]'>
            <groupfilter function='level-members' level='[my:REQUEST_DATETIME:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l86sq41ijnic012y15bg0cr89m9].[my:REQUEST_DATETIME:ok]</column>
            <column>[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' scope='rows' value='Percentage' />
            <format attr='title' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]' scope='rows' value='Amount' />
            <format attr='auto-subtitle' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[tdy:REQUEST_DATETIME:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[tdy:REQUEST_DATETIME:qk]' scope='cols' value='Date' />
            <format attr='width' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]' value='79' />
            <format attr='width' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' value='79' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]' value='c&quot;$&quot;#,##0,,M;-&quot;$&quot;#,##0,,M' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[my:REQUEST_DATETIME:ok]' value='Month'>
              <formatted-text>
                <run>Month</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month of Trips:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[tdy:REQUEST_DATETIME:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Total <[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[tdy:REQUEST_DATETIME:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Gross Profit Margin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values] + [federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk])</rows>
        <cols>[federated.0l86sq41ijnic012y15bg0cr89m9].[tdy:REQUEST_DATETIME:qk]</cols>
      </table>
      <simple-id uuid='{8E74DEB6-D813-4C14-A4FC-0DEDAF83037E}' />
    </worksheet>
    <worksheet name='explanation'>
      <table>
        <view>
          <datasources>
            <datasource caption='fct_trips' name='federated.0l86sq41ijnic012y15bg0cr89m9' />
          </datasources>
          <datasource-dependencies datasource='federated.0l86sq41ijnic012y15bg0cr89m9'>
            <column caption='description' datatype='string' name='[Calculation_2467128194511507465]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Metric descriptions&quot;' />
            </column>
            <column-instance column='[Calculation_2467128194511507465]' derivation='None' name='[none:Calculation_2467128194511507465:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='120' />
            <format attr='height' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:Calculation_2467128194511507465:nk]' value='126' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:Calculation_2467128194511507465:nk]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <text column='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:Calculation_2467128194511507465:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#000000'>- </run>
                <run bold='true' fontcolor='#000000'>Revenue ($)</run>
                <run fontcolor='#000000'>: passenger fare including tolls, tips, taxes, and surcharges</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>- </run>
                <run bold='true' fontcolor='#000000'>Profit ($)</run>
                <run fontcolor='#000000'>: driver earning and tips subtracted from base passenger fare excluding tolls, taxes, and surcharges</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>- </run>
                <run bold='true' fontcolor='#000000'>Driver earning ($)</run>
                <run fontcolor='#000000'>: driver earning net of commission, surcharges, and/or tax and including tips</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>- </run>
                <run bold='true' fontcolor='#000000'>Surcharges ($)</run>
                <run fontcolor='#000000'>: total amount collected for Black Car Fund, NYS congesting surcharge, and $2.50 for pickup/dropoff airport fee at LaGuardia, Newark, and John F. Kennedy airports</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>- </run>
                <run bold='true' fontcolor='#000000'>Surcharges Percentage (%)</run>
                <run fontcolor='#000000'>: percentage of surcharges in revenue</run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>- </run>
                <run bold='true' fontcolor='#000000'>Gross profit margin (%)</run>
                <run fontcolor='#000000'>: percentage of profit made from revenue after compensating drivers</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[none:Calculation_2467128194511507465:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='font-weight' value='bold' />
                <format attr='color' value='#555555' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='shape' value='Description/description - white.png' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0l86sq41ijnic012y15bg0cr89m9].[none:Calculation_2467128194511507465:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{E72C3D84-2579-4F22-A1A5-016619E88124}' />
    </worksheet>
    <worksheet name='hourly sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='fct_trips' name='federated.0l86sq41ijnic012y15bg0cr89m9' />
          </datasources>
          <datasource-dependencies datasource='federated.0l86sq41ijnic012y15bg0cr89m9'>
            <column caption='Base Passenger Fare' datatype='real' name='[BASE_PASSENGER_FARE]' role='measure' type='quantitative' />
            <column caption='Revenue' datatype='real' default-format='C1033%' name='[Calculation_2163838906514882560]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
            </column>
            <column caption='Profit' datatype='real' default-format='C1033%' name='[Calculation_2163838906514980865]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
            </column>
            <column caption='Driver Earning' datatype='real' default-format='C1033%' name='[Calculation_2163838906515095554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[DRIVER_PAY]+[TIPS]' />
            </column>
            <column caption='SUM([Profit])/SUM([Revenue])' datatype='real' name='[Calculation_2163838906522382346]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='SUM([Calculation_2163838906514980865])/SUM([Calculation_2163838906514882560])' />
            </column>
            <column caption='Driver Pay' datatype='real' name='[DRIVER_PAY]' role='measure' type='quantitative' />
            <column caption='Profit (copy)' datatype='real' default-format='C1033%' name='[Profit (copy)_2163838906522034183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
            </column>
            <column caption='Request Datetime' datatype='datetime' name='[REQUEST_DATETIME]' role='dimension' type='ordinal' />
            <column caption='Revenue (copy)' datatype='real' default-format='C1033%' name='[Revenue (copy)_2163838906522046472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
            </column>
            <column caption='Sales Tax' datatype='real' name='[SALES_TAX]' role='measure' type='quantitative' />
            <column caption='Surcharges' datatype='real' name='[SURCHARGES]' role='measure' type='quantitative' />
            <column caption='Tips' datatype='real' name='[TIPS]' role='measure' type='quantitative' />
            <column caption='Tolls' datatype='real' name='[TOLLS]' role='measure' type='quantitative' />
            <column-instance column='[REQUEST_DATETIME]' derivation='MDY' name='[md:REQUEST_DATETIME:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2163838906515095554]' derivation='Sum' name='[sum:Calculation_2163838906515095554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit (copy)_2163838906522034183]' derivation='Sum' name='[sum:Profit (copy)_2163838906522034183:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue (copy)_2163838906522046472]' derivation='Sum' name='[sum:Revenue (copy)_2163838906522046472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REQUEST_DATETIME]' derivation='Hour-Trunc' name='[thr:REQUEST_DATETIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2163838906522382346]' derivation='User' name='[usr:Calculation_2163838906522382346:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906515095554:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Profit (copy)_2163838906522034183:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Revenue (copy)_2163838906522046472:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0l86sq41ijnic012y15bg0cr89m9].[md:REQUEST_DATETIME:ok]'>
            <groupfilter function='member' level='[md:REQUEST_DATETIME:ok]' member='20220101' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l86sq41ijnic012y15bg0cr89m9].[md:REQUEST_DATETIME:ok]</column>
            <column>[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' scope='rows' value='Percentage' />
            <format attr='title' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]' scope='rows' value='Amount' />
            <format attr='auto-subtitle' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[thr:REQUEST_DATETIME:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[thr:REQUEST_DATETIME:qk]' scope='cols' value='Hour' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]' value='c&quot;$&quot;#,##0,K;-&quot;$&quot;#,##0,K' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[md:REQUEST_DATETIME:ok]' value='Date'>
              <formatted-text>
                <run>Date</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Hour of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[thr:REQUEST_DATETIME:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Total <[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Hour of Date:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[thr:REQUEST_DATETIME:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Gross Profit Margin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values] + [federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk])</rows>
        <cols>[federated.0l86sq41ijnic012y15bg0cr89m9].[thr:REQUEST_DATETIME:qk]</cols>
      </table>
      <simple-id uuid='{3C454EB0-8DBA-4F2F-8990-BE525047718E}' />
    </worksheet>
    <worksheet name='map'>
      <table>
        <view>
          <datasources>
            <datasource caption='fct_trips' name='federated.0l86sq41ijnic012y15bg0cr89m9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0l86sq41ijnic012y15bg0cr89m9'>
            <column caption='Base Passenger Fare' datatype='real' name='[BASE_PASSENGER_FARE]' role='measure' type='quantitative' />
            <column caption='Driver Earning' datatype='real' default-format='C1033%' name='[Calculation_2163838906515095554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[DRIVER_PAY]+[TIPS]' />
            </column>
            <column caption='dropoff loc' datatype='spatial' name='[Calculation_2467128194249256960]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MAKEPOINT([LONGITUDE],[LATITUDE])' />
            </column>
            <column caption='pickup loc' datatype='spatial' name='[Calculation_2467128194249338881]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MAKEPOINT([LONGITUDE (dim_pickup_loc.csv)],[LATITUDE (dim_pickup_loc.csv)])' />
            </column>
            <column caption='Gross Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_2467128194266914821]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit (copy)_2163838906522034183]) / SUM([Revenue (copy)_2163838906522046472])' />
            </column>
            <column caption='SUM([Surcharges])/SUM([Revenue (copy)])' datatype='real' name='[Calculation_2765491670301184001]' role='measure' type='quantitative' user:unnamed='map'>
              <calculation class='tableau' formula='SUM([SURCHARGES])/SUM([Revenue (copy)_2163838906522046472])' />
            </column>
            <column caption='Driver Pay' datatype='real' name='[DRIVER_PAY]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='LONGITUDE (dim pickup loc.csv)' datatype='real' name='[LATITUDE (dim_pickup_loc.csv)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='LATITUDE (dim pickup loc.csv)' datatype='real' name='[LONGITUDE (dim_pickup_loc.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column caption='Profit (copy)' datatype='real' default-format='C1033%' name='[Profit (copy)_2163838906522034183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
            </column>
            <column caption='Request Datetime' datatype='datetime' name='[REQUEST_DATETIME]' role='dimension' type='ordinal' />
            <column caption='Revenue (copy)' datatype='real' default-format='C1033%' name='[Revenue (copy)_2163838906522046472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
            </column>
            <column caption='Sales Tax' datatype='real' name='[SALES_TAX]' role='measure' type='quantitative' />
            <column caption='Surcharges' datatype='real' name='[SURCHARGES]' role='measure' type='quantitative' />
            <column caption='Tips' datatype='real' name='[TIPS]' role='measure' type='quantitative' />
            <column caption='Tolls' datatype='real' name='[TOLLS]' role='measure' type='quantitative' />
            <column caption='ZONE BOROUGH (dim pickup loc.csv)' datatype='string' name='[ZONE_BOROUGH (dim_pickup_loc.csv)]' role='dimension' type='nominal' />
            <column caption='Zone Borough' datatype='string' name='[ZONE_BOROUGH]' role='dimension' type='nominal' />
            <column-instance column='[ZONE_BOROUGH (dim_pickup_loc.csv)]' derivation='Attribute' name='[attr:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[ZONE_BOROUGH]' derivation='Attribute' name='[attr:ZONE_BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2467128194249256960]' derivation='Collect' name='[clct:Calculation_2467128194249256960:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2467128194249338881]' derivation='Collect' name='[clct:Calculation_2467128194249338881:nk]' pivot='key' type='nominal' />
            <column-instance column='[REQUEST_DATETIME]' derivation='Count' name='[cnt:REQUEST_DATETIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ZONE_BOROUGH (dim_pickup_loc.csv)]' derivation='None' name='[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[ZONE_BOROUGH]' derivation='None' name='[none:ZONE_BOROUGH:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2163838906515095554]' derivation='Sum' name='[sum:Calculation_2163838906515095554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit (copy)_2163838906522034183]' derivation='Sum' name='[sum:Profit (copy)_2163838906522034183:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue (copy)_2163838906522046472]' derivation='Sum' name='[sum:Revenue (copy)_2163838906522046472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SURCHARGES]' derivation='Sum' name='[sum:SURCHARGES:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2467128194266914821]' derivation='User' name='[usr:Calculation_2467128194266914821:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2765491670301184001]' derivation='User' name='[usr:Calculation_2765491670301184001:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' context='true'>
            <groupfilter function='member' level='[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' member='&quot;Clinton Hill, Brooklyn&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH:nk]'>
            <groupfilter function='member' level='[none:ZONE_BOROUGH:nk]' member='&quot;Bedford Park, Bronx&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]</column>
            <column>[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[Longitude (generated)]' field-type='quantitative' max='-8157034.6059806971' min='-8326715.8571310174' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[Latitude (generated)]' field-type='quantitative' max='4998606.3550459705' min='4931778.0468383757' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:SURCHARGES:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2765491670301184001:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:SURCHARGES:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' value='Pickup Location (marked &apos;X&apos; on the map)' />
            <format attr='title' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH:nk]' value='Dropoff Location'>
              <formatted-text>
                <run>Dropoff Location</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[attr:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='dropoff loc' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH:nk]' />
              <lod column='[federated.0l86sq41ijnic012y15bg0cr89m9].[clct:Calculation_2467128194249256960:nk]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[attr:ZONE_BOROUGH:nk]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[attr:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[cnt:REQUEST_DATETIME:qk]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Revenue (copy)_2163838906522046472:qk]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Profit (copy)_2163838906522034183:qk]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906515095554:qk]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:SURCHARGES:qk]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2467128194266914821:qk]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2765491670301184001:qk]' />
              <geometry column='[federated.0l86sq41ijnic012y15bg0cr89m9].[clct:Calculation_2467128194249256960:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Pickup Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[attr:ZONE_BOROUGH (dim_pickup_loc.csv):nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Dropoff Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[attr:ZONE_BOROUGH:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Trips: </run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[cnt:REQUEST_DATETIME:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Revenue: </run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Revenue (copy)_2163838906522046472:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Profit: </run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Profit (copy)_2163838906522034183:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Driver Earning: </run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906515095554:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Surcharges: </run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:SURCHARGES:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Surcharge Percentage: </run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2765491670301184001:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Gross Profit Margin: </run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2467128194266914821:qk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='206' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#9d7660' />
              </style-rule>
            </style>
          </pane>
          <_.fcp.Layers.true...pane generated-title='pickup loc' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.0l86sq41ijnic012y15bg0cr89m9].[clct:Calculation_2467128194249338881:nk]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[attr:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Pickup Location:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[attr:ZONE_BOROUGH (dim_pickup_loc.csv):nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='times' />
                <format attr='mark-color' value='#000000' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.0l86sq41ijnic012y15bg0cr89m9].[Latitude (generated)]</rows>
        <cols>[federated.0l86sq41ijnic012y15bg0cr89m9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{940367DB-BEE8-4C65-B9A1-2528F5BD56F8}' />
    </worksheet>
    <worksheet name='monthly sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='fct_trips' name='federated.0l86sq41ijnic012y15bg0cr89m9' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Profit' caption='_Measure Names' datatype='string' name='[Driver Pay Parameter]' param-domain-type='any' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0l86sq41ijnic012y15bg0cr89m9'>
            <column caption='Base Passenger Fare' datatype='real' name='[BASE_PASSENGER_FARE]' role='measure' type='quantitative' />
            <column caption='Revenue' datatype='real' default-format='C1033%' name='[Calculation_2163838906514882560]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
            </column>
            <column caption='Profit' datatype='real' default-format='C1033%' name='[Calculation_2163838906514980865]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
            </column>
            <column caption='Driver Earning' datatype='real' default-format='C1033%' name='[Calculation_2163838906515095554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[DRIVER_PAY]+[TIPS]' />
            </column>
            <column caption='SUM([Profit])/SUM([Revenue])' datatype='real' name='[Calculation_2163838906522382346]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='SUM([Calculation_2163838906514980865])/SUM([Calculation_2163838906514882560])' />
            </column>
            <column caption='_Measure Monthly Avg' datatype='real' name='[Calculation_2163838906526666765]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Driver Pay Parameter]=&quot;Driver Earning&quot; THEN { FIXED DATETRUNC(&apos;month&apos;,[REQUEST_DATETIME]) : AVG([Calculation_2163838906515095554])}&#10;ELSEIF [Parameters].[Driver Pay Parameter]=&quot;Profit&quot; THEN { FIXED DATETRUNC(&apos;month&apos;,[REQUEST_DATETIME]) : AVG([Calculation_2163838906514980865])}&#10;ELSEIF [Parameters].[Driver Pay Parameter]=&quot;Revenue&quot; THEN { FIXED DATETRUNC(&apos;month&apos;,[REQUEST_DATETIME]) : AVG([Calculation_2163838906514882560])}&#10;END' />
            </column>
            <column caption='Driver Pay' datatype='real' name='[DRIVER_PAY]' role='measure' type='quantitative' />
            <column caption='Profit (copy)' datatype='real' default-format='C1033%' name='[Profit (copy)_2163838906522034183]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
            </column>
            <column caption='Request Datetime' datatype='datetime' name='[REQUEST_DATETIME]' role='dimension' type='ordinal' />
            <column caption='Revenue (copy)' datatype='real' default-format='C1033%' name='[Revenue (copy)_2163838906522046472]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
            </column>
            <column caption='Sales Tax' datatype='real' name='[SALES_TAX]' role='measure' type='quantitative' />
            <column caption='Surcharges' datatype='real' name='[SURCHARGES]' role='measure' type='quantitative' />
            <column caption='Tips' datatype='real' name='[TIPS]' role='measure' type='quantitative' />
            <column caption='Tolls' datatype='real' name='[TOLLS]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2163838906526666765]' derivation='Avg' name='[avg:Calculation_2163838906526666765:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2163838906515095554]' derivation='Sum' name='[sum:Calculation_2163838906515095554:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit (copy)_2163838906522034183]' derivation='Sum' name='[sum:Profit (copy)_2163838906522034183:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue (copy)_2163838906522046472]' derivation='Sum' name='[sum:Revenue (copy)_2163838906522046472:qk]' pivot='key' type='quantitative' />
            <column-instance column='[REQUEST_DATETIME]' derivation='Month-Trunc' name='[tmn:REQUEST_DATETIME:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2163838906522382346]' derivation='User' name='[usr:Calculation_2163838906522382346:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906515095554:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Profit (copy)_2163838906522034183:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Revenue (copy)_2163838906522046472:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Revenue (copy)_2163838906522046472:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Profit (copy)_2163838906522034183:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906515095554:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' scope='rows' value='Percentage' />
            <format attr='title' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]' scope='rows' value='Amount' />
            <format attr='auto-subtitle' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[tmn:REQUEST_DATETIME:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[tmn:REQUEST_DATETIME:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906526666765:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]' value='c&quot;$&quot;#,##0,,M;-&quot;$&quot;#,##0,,M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
              <tooltip column='[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906526666765:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[tmn:REQUEST_DATETIME:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[Total <[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]>:	]]></run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Month:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[tmn:REQUEST_DATETIME:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Gross Profit Margin:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>([federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values] + [federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906522382346:qk])</rows>
        <cols>[federated.0l86sq41ijnic012y15bg0cr89m9].[tmn:REQUEST_DATETIME:qk]</cols>
      </table>
      <simple-id uuid='{61E73293-D813-4A44-B87E-5650AEC8D09D}' />
    </worksheet>
    <worksheet name='overview - trip'>
      <table>
        <view>
          <datasources>
            <datasource caption='fct_trips' name='federated.0l86sq41ijnic012y15bg0cr89m9' />
          </datasources>
          <datasource-dependencies datasource='federated.0l86sq41ijnic012y15bg0cr89m9'>
            <column caption='Base Passenger Fare' datatype='real' name='[BASE_PASSENGER_FARE]' role='measure' type='quantitative' />
            <column caption='Revenue' datatype='real' default-format='C1033%' name='[Calculation_2163838906514882560]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
            </column>
            <column caption='Profit' datatype='real' default-format='C1033%' name='[Calculation_2163838906514980865]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
            </column>
            <column caption='Driver Earning' datatype='real' default-format='C1033%' name='[Calculation_2163838906515095554]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[DRIVER_PAY]+[TIPS]' />
            </column>
            <column caption='Driver Pay' datatype='real' name='[DRIVER_PAY]' role='measure' type='quantitative' />
            <column caption='Sales Tax' datatype='real' name='[SALES_TAX]' role='measure' type='quantitative' />
            <column caption='Surcharges' datatype='real' name='[SURCHARGES]' role='measure' type='quantitative' />
            <column caption='Tips' datatype='real' name='[TIPS]' role='measure' type='quantitative' />
            <column caption='Tolls' datatype='real' name='[TOLLS]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2163838906514882560]' derivation='Avg' name='[avg:Calculation_2163838906514882560:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2163838906514980865]' derivation='Avg' name='[avg:Calculation_2163838906514980865:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2163838906515095554]' derivation='Avg' name='[avg:Calculation_2163838906515095554:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906514882560:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906515095554:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906514980865:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906514882560:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906515095554:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[avg:Calculation_2163838906514980865:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' value='250' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]' />
              <text column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='14'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#555555'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8AD23769-7A3C-4CD7-AD4B-D725E1B707EE}' />
    </worksheet>
    <worksheet name='overview - year'>
      <table>
        <view>
          <datasources>
            <datasource caption='fct_trips' name='federated.0l86sq41ijnic012y15bg0cr89m9' />
          </datasources>
          <datasource-dependencies datasource='federated.0l86sq41ijnic012y15bg0cr89m9'>
            <column caption='Base Passenger Fare' datatype='real' name='[BASE_PASSENGER_FARE]' role='measure' type='quantitative' />
            <column caption='Revenue' datatype='real' default-format='C1033%' name='[Calculation_2163838906514882560]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]+[TOLLS]+[TIPS]+[SALES_TAX]+[SURCHARGES]' />
            </column>
            <column caption='Profit' datatype='real' default-format='C1033%' name='[Calculation_2163838906514980865]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[BASE_PASSENGER_FARE]-[DRIVER_PAY]-[TIPS]' />
            </column>
            <column caption='SUM([Profit])/SUM([Revenue])' datatype='real' name='[Calculation_2163838906515464196]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='SUM([Calculation_2163838906514980865])/SUM([Calculation_2163838906514882560])' />
            </column>
            <column caption='Driver Pay' datatype='real' name='[DRIVER_PAY]' role='measure' type='quantitative' />
            <column caption='Sales Tax' datatype='real' name='[SALES_TAX]' role='measure' type='quantitative' />
            <column caption='Surcharges' datatype='real' name='[SURCHARGES]' role='measure' type='quantitative' />
            <column caption='Tips' datatype='real' name='[TIPS]' role='measure' type='quantitative' />
            <column caption='Tolls' datatype='real' name='[TOLLS]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='fct_trips.csv' datatype='integer' name='[__tableau_internal_object_id__].[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='fct_trips.csv' datatype='table' name='[__tableau_internal_object_id__].[fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2163838906514882560]' derivation='Sum' name='[sum:Calculation_2163838906514882560:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2163838906514980865]' derivation='Sum' name='[sum:Calculation_2163838906514980865:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2163838906515464196]' derivation='User' name='[usr:Calculation_2163838906515464196:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[__tableau_internal_object_id__].[cnt:fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906514882560:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906514980865:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906515464196:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[__tableau_internal_object_id__].[cnt:fct_trips.csv_96ED1C96DAE74942BBD9FB4CD1CCDE73:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906514882560:qk]&quot;</bucket>
              <bucket>&quot;[federated.0l86sq41ijnic012y15bg0cr89m9].[sum:Calculation_2163838906514980865:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' value='250' />
            <format attr='text-format' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[usr:Calculation_2163838906515464196:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]' />
              <text column='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontcolor='#555555' fontname='Tableau Semibold' fontsize='14'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#555555'><![CDATA[<[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]>]]></run>
                <run fontcolor='#555555'>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{928FA910-5A91-45DD-8135-1C28A928D516}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1800' maxwidth='1000' minheight='1800' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='fct_trips' name='federated.0l86sq41ijnic012y15bg0cr89m9' />
      </datasources>
      <datasource-dependencies datasource='federated.0l86sq41ijnic012y15bg0cr89m9'>
        <column caption='Request Datetime' datatype='datetime' name='[REQUEST_DATETIME]' role='dimension' type='ordinal' />
        <column caption='ZONE BOROUGH (dim pickup loc.csv)' datatype='string' name='[ZONE_BOROUGH (dim_pickup_loc.csv)]' role='dimension' type='nominal' />
        <column caption='Zone Borough' datatype='string' name='[ZONE_BOROUGH]' role='dimension' type='nominal' />
        <column-instance column='[REQUEST_DATETIME]' derivation='MDY' name='[md:REQUEST_DATETIME:ok]' pivot='key' type='ordinal' />
        <column-instance column='[REQUEST_DATETIME]' derivation='MY' name='[my:REQUEST_DATETIME:ok]' pivot='key' type='ordinal' />
        <column-instance column='[ZONE_BOROUGH (dim_pickup_loc.csv)]' derivation='None' name='[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' pivot='key' type='nominal' />
        <column-instance column='[ZONE_BOROUGH]' derivation='None' name='[none:ZONE_BOROUGH:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='99112' id='139' param='horz' type-v2='layout-flow' w='98400' x='800' y='444'>
            <zone h='99112' id='137' param='horz' type-v2='layout-flow' w='98400' x='800' y='444'>
              <zone h='99112' id='124' param='horz' type-v2='layout-flow' w='98400' x='800' y='444'>
                <zone h='99112' id='46' type-v2='layout-basic' w='98400' x='800' y='444'>
                  <zone h='72056' id='34' param='horz' type-v2='layout-flow' w='98400' x='800' y='444'>
                    <zone h='72056' id='21' type-v2='layout-basic' w='98400' x='800' y='444'>
                      <zone forceUpdate='true' h='5667' id='5' type-v2='text' w='88106' x='11094' y='444'>
                        <formatted-text>
                          <run bold='true' fontcolor='#333333' fontname='Tableau Semibold' fontsize='28'> 2022 NYC UBER ANALYSIS</run>
                          <run>Æ&#10;</run>
                          <run fontcolor='#333333' fontsize='10'>   A business analysis on Uber trips made in NYC in 2022. Focuses on revenue and profit with time and location breakdowns. </run>
                          <run>Æ&#10;</run>
                          <run fontcolor='#333333' fontsize='10'>   Hover over </run>
                          <run fontcolor='#000000' fontname='u2400' fontsize='11'>ⓘ</run>
                          <run fontcolor='#000000' fontsize='10'>Æ </run>
                          <run fontcolor='#333333' fontsize='10'>for metric descriptions.</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='2222' id='6' type-v2='text' w='98400' x='800' y='7889'>
                        <formatted-text>
                          <run fontalignment='1' fontcolor='#555555' fontname='Tableau Semibold' fontsize='18'>OVERVIEW</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='2' />
                          <format attr='background-color' value='#d4d4d4' />
                        </zone-style>
                      </zone>
                      <zone h='1778' id='7' type-v2='empty' w='98400' x='800' y='6111'>
                        <zone-style>
                          <format attr='border-color' value='#898989' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='5' />
                          <format attr='margin' value='13' />
                          <format attr='margin-right' value='2' />
                          <format attr='margin-left' value='2' />
                        </zone-style>
                      </zone>
                      <zone h='4500' id='8' name='overview - year' show-title='false' w='98400' x='800' y='12333'>
                        <zone-style>
                          <format attr='border-color' value='#f5f5f5' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='5' />
                          <format attr='margin' value='2' />
                        </zone-style>
                      </zone>
                      <zone h='4495' id='9' name='overview - trip' show-title='false' w='98400' x='800' y='19056'>
                        <zone-style>
                          <format attr='border-color' value='#f5f5f5' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='4' />
                          <format attr='margin' value='2' />
                        </zone-style>
                      </zone>
                      <zone forceUpdate='true' h='2222' id='10' type-v2='text' w='98400' x='800' y='10111'>
                        <formatted-text>
                          <run fontalignment='1' fontcolor='#555555' fontsize='15'>PER YEAR</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='2' />
                          <format attr='padding' value='0' />
                          <format attr='background-color' value='#f5f5f5' />
                        </zone-style>
                      </zone>
                      <zone forceUpdate='true' h='2223' id='11' type-v2='text' w='98400' x='800' y='16833'>
                        <formatted-text>
                          <run fontalignment='1' fontcolor='#555555' fontsize='15'>PER TRIP</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='2' />
                          <format attr='background-color' value='#f5f5f5' />
                        </zone-style>
                      </zone>
                      <zone forceUpdate='true' h='2222' id='12' type-v2='text' w='98400' x='800' y='23551'>
                        <formatted-text>
                          <run fontalignment='1' fontcolor='#555555' fontname='Tableau Semibold' fontsize='18'>TIME</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='2' />
                          <format attr='background-color' value='#d4d4d4' />
                        </zone-style>
                      </zone>
                      <zone h='19884' id='20' name='monthly sales' show-title='false' w='98400' x='800' y='28000'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone forceUpdate='true' h='2227' id='25' type-v2='text' w='98400' x='800' y='25773'>
                        <formatted-text>
                          <run fontalignment='1' fontcolor='#555555' fontsize='15'>MONTHLY BREAKDOWN</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='2' />
                          <format attr='background-color' value='#f5f5f5' />
                        </zone-style>
                      </zone>
                      <zone h='2214' id='26' type-v2='text' w='47597' x='800' y='47884'>
                        <formatted-text>
                          <run fontalignment='1' fontcolor='#555555' fontsize='15'>DAILY BREAKDOWN</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='2' />
                          <format attr='background-color' value='#f5f5f5' />
                        </zone-style>
                      </zone>
                      <zone h='2214' id='27' type-v2='text' w='47601' x='51599' y='47884'>
                        <formatted-text>
                          <run fontalignment='1' fontcolor='#555555' fontsize='15'>HOURLY BREAKDOWN</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='2' />
                          <format attr='background-color' value='#f5f5f5' />
                        </zone-style>
                      </zone>
                      <zone h='19394' id='28' name='daily sales' show-title='false' w='47597' x='800' y='53106'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='3008' id='31' mode='dropdown' name='daily sales' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[my:REQUEST_DATETIME:ok]' show-all='false' type-v2='filter' w='47597' x='800' y='50098'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='19389' id='32' name='hourly sales' show-title='false' w='47601' x='51599' y='53111'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='3013' id='35' mode='dropdown' name='hourly sales' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[md:REQUEST_DATETIME:ok]' show-all='false' type-v2='filter' w='47601' x='51599' y='50098'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='24616' id='66' type-v2='empty' w='3202' x='48397' y='47884'>
                        <zone-style>
                          <format attr='border-color' value='#f5f5f5' />
                          <format attr='border-style' value='solid' />
                          <format attr='border-width' value='5' />
                          <format attr='margin' value='13' />
                          <format attr='margin-top' value='1' />
                          <format attr='margin-right' value='13' />
                          <format attr='margin-bottom' value='5' />
                          <format attr='margin-left' value='13' />
                        </zone-style>
                      </zone>
                      <zone h='5667' id='86' is-scaled='1' param='/Users/viviank/Desktop/uber logo/iOS App Icon.png' type-v2='bitmap' w='10294' x='800' y='444'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                  <zone forceUpdate='true' h='2217' id='44' type-v2='text' w='98400' x='800' y='72500'>
                    <formatted-text>
                      <run fontalignment='1' fontname='Tableau Semibold' fontsize='18'>LOCATION</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='2' />
                      <format attr='background-color' value='#d4d4d4' />
                    </zone-style>
                  </zone>
                  <zone h='21839' id='62' name='map' show-title='false' w='98400' x='800' y='77717'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3000' id='65' mode='dropdown' name='map' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' show-all='false' type-v2='filter' w='49200' x='800' y='74717'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='3000' id='140' mode='dropdown' name='map' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH:nk]' type-v2='filter' values='relevant' w='49200' x='50000' y='74717'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='4778' id='81' name='explanation' show-title='false' w='9000' x='90700' y='111' />
        <zone h='5444' id='125' name='monthly sales' pane-specification-id='3' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' show-title='false' type-v2='color' w='14000' x='76000' y='38889' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2450' minheight='2450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='142' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='99112' id='141' param='vert' type-v2='layout-flow' w='98400' x='800' y='444'>
                <zone fixed-size='86' h='4778' id='81' is-fixed='true' name='explanation' show-title='false' w='9000' x='90700' y='111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='94' h='5667' id='86' is-fixed='true' is-scaled='1' param='/Users/viviank/Desktop/uber logo/iOS App Icon.png' type-v2='bitmap' w='10294' x='800' y='444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5667' id='5' type-v2='text' w='88106' x='11094' y='444'>
                  <formatted-text>
                    <run bold='true' fontcolor='#333333' fontname='Tableau Semibold' fontsize='28'> 2022 NYC UBER ANALYSIS</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#333333' fontsize='10'>   A business analysis on Uber trips made in NYC in 2022. Focuses on revenue and profit with time and location breakdowns. </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#333333' fontsize='10'>   Hover over </run>
                    <run fontcolor='#000000' fontname='u2400' fontsize='11'>ⓘ</run>
                    <run fontcolor='#000000' fontsize='10'>Æ </run>
                    <run fontcolor='#333333' fontsize='10'>for metric descriptions.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2222' id='6' type-v2='text' w='98400' x='800' y='7889'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#555555' fontname='Tableau Semibold' fontsize='18'>OVERVIEW</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#d4d4d4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2222' id='10' type-v2='text' w='98400' x='800' y='10111'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#555555' fontsize='15'>PER YEAR</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5' />
                  </zone-style>
                </zone>
                <zone fixed-size='67' h='4500' id='8' is-fixed='true' name='overview - year' show-title='false' w='98400' x='800' y='12333'>
                  <zone-style>
                    <format attr='border-color' value='#f5f5f5' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='5' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2223' id='11' type-v2='text' w='98400' x='800' y='16833'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#555555' fontsize='15'>PER TRIP</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5' />
                  </zone-style>
                </zone>
                <zone fixed-size='69' h='4495' id='9' is-fixed='true' name='overview - trip' show-title='false' w='98400' x='800' y='19056'>
                  <zone-style>
                    <format attr='border-color' value='#f5f5f5' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='4' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2222' id='12' type-v2='text' w='98400' x='800' y='23551'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#555555' fontname='Tableau Semibold' fontsize='18'>TIME</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#d4d4d4' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2227' id='25' type-v2='text' w='98400' x='800' y='25773'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#555555' fontsize='15'>MONTHLY BREAKDOWN</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='19884' id='20' is-fixed='true' name='monthly sales' show-title='false' w='98400' x='800' y='28000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5444' id='125' name='monthly sales' pane-specification-id='3' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' show-title='false' type-v2='color' w='14000' x='76000' y='38889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2214' id='26' type-v2='text' w='47597' x='800' y='47884'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#555555' fontsize='15'>DAILY BREAKDOWN</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5' />
                  </zone-style>
                </zone>
                <zone h='2214' id='27' type-v2='text' w='47601' x='51599' y='47884'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#555555' fontsize='15'>HOURLY BREAKDOWN</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f5f5f5' />
                  </zone-style>
                </zone>
                <zone h='3008' id='31' mode='dropdown' name='daily sales' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[my:REQUEST_DATETIME:ok]' show-all='false' type-v2='filter' w='47597' x='800' y='50098'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='19394' id='28' is-fixed='true' name='daily sales' show-title='false' w='47597' x='800' y='53106'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3013' id='35' mode='dropdown' name='hourly sales' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[md:REQUEST_DATETIME:ok]' show-all='false' type-v2='filter' w='47601' x='51599' y='50098'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='19389' id='32' is-fixed='true' name='hourly sales' show-title='false' w='47601' x='51599' y='53111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='2217' id='44' type-v2='text' w='98400' x='800' y='72500'>
                  <formatted-text>
                    <run fontalignment='1' fontname='Tableau Semibold' fontsize='18'>LOCATION</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#d4d4d4' />
                  </zone-style>
                </zone>
                <zone h='3000' id='65' mode='dropdown' name='map' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' show-all='false' type-v2='filter' w='49200' x='800' y='74717'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3000' id='140' mode='dropdown' name='map' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH:nk]' type-v2='filter' values='relevant' w='49200' x='50000' y='74717'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='21839' id='62' is-fixed='true' name='map' show-title='false' w='98400' x='800' y='77717'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3E8C6DB1-88BB-4DC6-AAD0-77D1CFB480CF}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='daily sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='explanation'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='hourly sales'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='monthly sales'>
          <zoom type='entire-view' />
          <highlight field='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='overview - trip'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='overview - year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='25' />
      <simple-id uuid='{4F9BC97B-BEDD-42AD-93BE-38B15C377A29}' />
    </window>
    <window class='worksheet' name='overview - year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{99FE9D73-425E-42AB-94BF-C3A3201112CC}' />
    </window>
    <window class='worksheet' name='overview - trip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1F1FE577-8AE1-45FC-B198-75D9F000CED9}' />
    </window>
    <window class='worksheet' name='monthly sales'>
      <cards>
        <edge name='left'>
          <strip size='230'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0l86sq41ijnic012y15bg0cr89m9].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight field='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]'>
          <bucket-selection />
        </highlight>
      </viewpoint>
      <simple-id uuid='{67FA8508-D727-4265-A713-E9F426B40A56}' />
    </window>
    <window class='worksheet' name='daily sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[my:REQUEST_DATETIME:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{60B40674-4D96-4ADE-9B51-249A42DA8EBC}' />
    </window>
    <window class='worksheet' name='hourly sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[md:REQUEST_DATETIME:ok]' type='filter' />
            <card pane-specification-id='3' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CB8A5DA3-BE57-483D-85C4-29ACF62852FC}' />
    </window>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH (dim_pickup_loc.csv):nk]' type='filter' />
            <card param='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH:nk]' type='filter' values='relevant' />
            <card pane-specification-id='2' param='[federated.0l86sq41ijnic012y15bg0cr89m9].[none:ZONE_BOROUGH:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{0AE91CCC-C513-4798-A30E-5B3233FF0A07}' />
    </window>
    <window class='worksheet' name='explanation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0l86sq41ijnic012y15bg0cr89m9].[none:Calculation_2467128194511507465:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B2A9435-9CA8-4AC3-BCAE-704FF248A2D9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Dashboard 1' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='daily sales' width='384'>
      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
      D6ejfoP+Er6EAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='260' name='explanation' width='248'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='hourly sales' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='map' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='monthly sales' width='384'>
      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
      hBAWJQEghBAWJQEghBAWJQEghBAWJQEghBAWJQEghBAWJQEghBAWJQEghBAWJQEghBAWJQEg
      hBAWJQEghBAWJQEghBAWJQEghBAWJQEghBAWJQEghBAWJQEghBAWJQEghBAWJQEghBAWJQEg
      hBAWJQEghBAWJQEghBAWZfupD0AIkc80TXRTR1VUVOXpu0YzTZNUKkU6ncYwDDRNw+Fw4HA4
      UBRlU3WlUilSqRS6rmO323G5XGiatmo9pmmSyWRIpVJks9lceZttZTNmGAbpdJpUKoXNZsPt
      dqOqK8+lruuk02lsNhs2m23Tx7/VSQAI8RSZTcwwONNPJD6F31VAdbCGUn85mqr91IcGQDab
      paenh+7ubkZGRkgkEvh8PmpqamhpaaGiogK73b6huiKRCNeuXaO/v59YLMa2bdtobGyktbUV
      l8uVV9Y0Taanp+no6KCvr4/Z2VlKS0tpampiz549+P3+XFld1xkeHqajo4Ph4WECgQCtra00
      NDTgcDjy6gyHw9y+fZu9e/eyffv2H+UcbSX/H3fA4Ct7/PozAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='94' name='overview - trip' width='384'>
      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
      ABAE2ioHfscWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='94' name='overview - year' width='384'>
      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
      +D+xg47DG0TfWQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='Description/description - black.png'>
        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
        jdsxAAAAAElFTkSuQmCC
      </shape>
      <shape name='Description/description - white.png'>
        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
      </shape>
    </shapes>
  </external>
</workbook>
